tempdir()
write("TMPDIR = 'D:\\R work temp'", file=file.path(Sys.getenv('R_USER'), '.Renviron'))
tempdir()
write("TMPDIR = 'D:\\R work temp'", file=file.path(Sys.getenv('R_USER'), '.Renviron'))
q()
write("TMPDIR = 'D:\R work temp'", file=file.path(Sys.getenv('R_USER'), '.Renviron'))
write("TMPDIR = 'D:\\R work temp'", file=file.path(Sys.getenv('R_USER'), '.Renviron'))
write("TMPDIR = 'D:\\R work temp'", file=file.path(Sys.getenv('R_USER'), '.Renviron'))
tempdir()
library(readxl)
library(plyr)
library(WriteXLS)
library(foreign)
library(xlsx)
library(tcltk2)
library(xlsx)
library("xlsx")
total<-10
for(i in 1:total{})
for(i in 1:total{
for(i in 1:total{print(i) Sys.sleep(0.1)}
total <- 10
for(i in 1:total){
print(i)
Sys.sleep(0.1)
}
total <- 20
for(i in 1:total){
Sys.sleep(0.1)
print(i)
# update GUI console
flush.console()
}
total <- 20
# create progress bar
pb <- txtProgressBar(min = 0, max = total, style = 3)
for(i in 1:total){
Sys.sleep(0.1)
# update progress bar
setTxtProgressBar(pb, i)
}
close(pb)
total <- 20
# create progress bar
pb <- tkProgressBar(title = "progress bar", min = 0,
max = total, width = 300)
for(i in 1:total){
Sys.sleep(0.1)
setTkProgressBar(pb, i, label=paste( round(i/total*100, 0),
"% done"))
}
close(pb)
library(tcltk)
pb <- tkProgressBar(title = "progress bar", min = 0,
max = total, width = 300)
for(i in 1:total){
Sys.sleep(0.1)
setTkProgressBar(pb, i, label=paste( round(i/total*100, 0),
"% done"))
}
close(pb)
pb <- tkProgressBar(title = "progress bar", min = 0,
max = total, width = 300)
for(i in 1:total){
Sys.sleep(0.1)
setTkProgressBar(pb, i, label=paste( round(i/total*100, 0),
"% done"))
}
close(pb)
total<-300
pb <- tkProgressBar(title = "progress bar", min = 0,
max = total, width = 300)
for(i in 1:total){
Sys.sleep(0.1)
setTkProgressBar(pb, i, label=paste( round(i/total*100, 0),
"% done"))
}
close(pb)
total<-150
pb <- tkProgressBar(title = "progress bar", min = 0,
max = total, width = 300)
for(i in 1:total){
Sys.sleep(0.1)
setTkProgressBar(pb, i, label=paste( round(i/total*100, 0),
"% done"))
}
close(pb)
pb <- winProgressBar(title = "progress bar", min = 0,
max = total, width = 300)
for(i in 1:total){
Sys.sleep(0.1)
setWinProgressBar(pb, i, title=paste( round(i/total*100, 0),
"% done"))
}
close(pb)
library(ggplot2)
library(plotly)
library(ggplot2)
library(plotly)
library(ggplot2)
install.packages(c('repr', 'IRdisplay', 'evaluate', 'crayon', 'pbdZMQ', 'devtools', 'uuid', 'digest'))
devtools::install_github('IRkernel/IRkernel')
install_github("IRkernel/IRkernel")
library(devtools)
install_github("IRkernel/IRkernel")
user<-as.data.frame(installed.packages()[,c(1,3:4)]
rownames(user)<-NULL
user<-user[is.na(user$Priority),1:2,drop=FALSE]
user<-as.data.frame(installed.packages()[,c(1,3:4)]
)
user <- as.data.frame(installed.packages()[,c(1,3:4)])
rownames(user) <- NULL
user <- user [is.na(user $Priority),1:2,drop=FALSE]
write.csv(user,"User_Rpackages_list.csv",row.names=F)
View(user)
library(arcgisbinding)
arc.check_product()
arc.check_product()
sessionInfo()
arc.check_product()
install.packages("rLandsat")
library(rLandsat)
result = landsat_search(min_date = "2018-07-01", max_date = "2019-01-10", country = "Taiwan")
espa_creds("t87134@gmail.com", "shmily87134")
prods = espa_products(result$product_id)
View(result)
result = landsat_search(min_date = "2018-07-01", max_date = "2018-12-31", country = "Taiwan")
View(result)
View(result)
install.packages("Landsat")
install.packages("landsat")
library(landsat)
result = landsat_search(min_date = "2018-07-01", max_date = "2019-01-10", country = "Taiwan")
View(result)
result = landsat_search(min_date = "2018-08-01", max_date = "2019-01-10", country = "Taiwan")
View(result)
result = landsat_search(min_date = "2018-07-01", max_date = "2019-01-10", country = "Taiwan")
View(result)
user <- as.data.frame(installed.packages()[,c(1,3:4)])
rownames(user) <- NULL
user <- user [is.na(user $Priority),1:2,drop=FALSE]
#write.csv(user,"User_Rpackages_list.csv",row.names=F)
#print(user, row.names=FALSE)
user <- as.data.frame(installed.packages()[,c(1,3:4)])
rownames(user) <- NULL
user <- user [is.na(user $Priority),1:2,drop=FALSE]
#write.csv(user,"User_Rpackages_list.csv",row.names=F)
